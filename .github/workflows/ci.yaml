name: Run DVC pipeline
on: [push]

jobs:
  pipeline:
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"
      pull-requests: "write"

    env:
      WORKFLOW_IMAGE: europe-west2-docker.pkg.dev/gothic-album-364814/pauljs-io/mlops-dvc
      ARGO_WF_URL: https://wf.pauljs.io
      ARGO_NS: dev

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - id: "auth"
        name: Authenticate with Google Cloud
        uses: "google-github-actions/auth@v0.8.3"
        with:
          workload_identity_provider: ${{secrets.WI_PROVIDER}}
          service_account: ${{secrets.GSA_ARGO_WF}}

      - name: Authorize access to GKE cluster
        id: "get-credentials"
        uses: "google-github-actions/get-gke-credentials@v0.8.2"
        with:
          cluster_name: "k8s-cluster"
          location: "europe-west2-a"

      - name: Authenticate Docker
        run: gcloud auth configure-docker europe-west2-docker.pkg.dev --quiet

      - name: Setup Docker BuildKit
        uses: docker/setup-buildx-action@v2

      - name: Build & Publish Workflow Image
        uses: docker/build-push-action@v3
        with:
          context: ./
          target: dvc
          push: true
          tags: ${{ env.WORKFLOW_IMAGE }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.WORKFLOW_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.WORKFLOW_IMAGE }}:buildcache,mode=max

      - name: Create Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "ci/requirements.txt"

      - name: Configure Python Environment
        run: pip install -r ci/requirements.txt

      - name: Generate Argo Workflow
        run: >-
          ci/main.py
          --target ml_pipelines/ci/dvc.yaml
          --image ${{ env.WORKFLOW_IMAGE }}:${{ github.sha }}
          --service_account dvc-remote
          --repo ${{ github.server_url }}/${{ github.repository }}.git
          --rev ${{ github.sha }}
          --dvc_remote gcloud > workflow.yaml

      - name: Submit Argo Workflow
        run: |
          SUBMIT_OUTPUT=$(kubectl create -n ${ARGO_NS} -f workflow.yaml)
          ARGO_WF=${SUBMIT_OUTPUT:21:-8}
          echo "### [Argo Workflow](${ARGO_WF_URL}/workflows/${ARGO_NS}/${ARGO_WF})" >> $GITHUB_STEP_SUMMARY
          kubectl -n ${ARGO_NS} wait workflow ${ARGO_WF} --for=condition=PodRunning --timeout=5m \
            || echo "* Timeout waiting for pods to start" >> $GITHUB_STEP_SUMMARY
          echo "ARGO_WF=${ARGO_WF}" >> $GITHUB_ENV

      - name: Find Pull Request
        uses: juliangruber/find-pull-request-action@v1
        id: find-pull-request
        with:
          branch: ${{ github.ref_name }}

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        if: steps.find-pull-request.outputs.number
        with:
          message: |
            ### Current Workflow Run: [${{ env.ARGO_WF }}](${{ env.ARGO_WF_URL }}/workflows/${{ env.ARGO_NS }}/${{ env.ARGO_WF }})
            [![Workflow](https://image.thum.io/get/crop/400/${{ env.ARGO_WF_URL }}/widgets/workflow-graphs/${{ env.ARGO_NS }}?name=${{ env.ARGO_WF }}&nodeSize=32&target=_top)](${{ env.ARGO_WF_URL }}/workflows/${{ env.ARGO_NS }}/${{ env.ARGO_WF }})
          comment_tag: workflow
          pr_number: ${{ steps.find-pull-request.outputs.number }}

      - name: Monitor Argo Workflow
        run: |
          kubectl -n ${ARGO_NS} wait workflow ${ARGO_WF} --for=condition=Completed --timeout=30m \
            || echo "* Timeout waiting for workflow to complete" >> $GITHUB_STEP_SUMMARY
          WF_STATUS=$(kubectl -n ${ARGO_NS} get workflow ${ARGO_WF} -ojsonpath="{.status.phase}")
          echo "* Status: \`$WF_STATUS\`" >> $GITHUB_STEP_SUMMARY
          [[ ${WF_STATUS} == "Succeeded" ]]
